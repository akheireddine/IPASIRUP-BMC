+ . ./defs
+ test -f ./defs
+ test -z .
+ test -f ./../core/defs.in
+ echo == Running test remove_x.test
== Running test remove_x.test
+ echo remove_x.test
+ sed -e s,.*[\/],,;s/\.test$//
+ me=remove_x
+ testSubDir=remove_x.dir
+ chmod -R a+rwx remove_x.dir
+ rm -rf remove_x.dir
+ mkdir remove_x.dir
+ cd remove_x.dir
+ srcdir=../.
+ AWK=gawk
+ DOT=dot
+ LBTT=
+ LBTT_TRANSLATE=
+ VALGRIND=valgrind
+ SPIN=
+ LTL2BA=
+ PYTHON=
+ top_srcdir=/home/nissa/Documents/WORKS/cadical-user-propagation/spot
+ unset SPOT_DOTEXTRA
+ unset SPOT_DOTDEFAULT
+ set -x
+ run 0 ltlfilt -q --remove-x -f Xa --equivalent-to Ga | (!a & Fa)
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ltlfilt
+ cmd=/home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ shift
+ test -n /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ set /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --remove-x -f Xa --equivalent-to Ga | (!a & Fa)
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --remove-x -f Xa --equivalent-to Ga | (!a & Fa)
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ run 1 ltlfilt -q --stutter-invariant -f Xa
+ expected_exitcode=1
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ltlfilt
+ cmd=/home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ shift
+ test -n /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ set /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -f Xa
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -f Xa
+ exitcode=1
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 1 = 1
+ run 0 ltlfilt -q --stutter-invariant -f F(!a & Xa & Xb)
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ltlfilt
+ cmd=/home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ shift
+ test -n /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ set /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -f F(!a & Xa & Xb)
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -f F(!a & Xa & Xb)
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ run 1 ltlfilt -q --stutter-invariant -f F(Xa & Xb)
+ expected_exitcode=1
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ltlfilt
+ cmd=/home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ shift
+ test -n /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ set /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -f F(Xa & Xb)
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -f F(Xa & Xb)
+ exitcode=1
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 1 = 1
+ run 0 ltlfilt --remove-x -f F(!a & Xa & Xb)
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ltlfilt
+ cmd=/home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ shift
+ test -n /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ set /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt --remove-x -f F(!a & Xa & Xb)
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt --remove-x -f F(!a & Xa & Xb)
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ grep -v X out
F(!a & ((a & (a U (a & !a)) & ((!b U !a) | (b U !a))) | (!a & (!a U a) & ((!b U a) | (b U a))) | (b & (b U (a & !b)) & ((!a U !b) | (a U !b))) | (!b & (!b U (a & b)) & ((!a U b) | (a U b))) | (a & (G!a | Ga) & (G!b | Gb))) & ((a & ((!b U !a) | (b U !a)) & (a U (!a & b))) | (!a & ((!b U a) | (b U a)) & (!a U (a & b))) | (b & ((!a U !b) | (a U !b)) & (b U (b & !b))) | (!b & ((!a U b) | (a U b)) & (!b U b)) | (b & (G!a | Ga) & (G!b | Gb))))
+ run 0 ltlfilt -q --stutter-invariant -F out
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ltlfilt
+ cmd=/home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ shift
+ test -n /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ set /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -F out
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -F out
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ run 1 ltlfilt -q --stutter-invariant -f F(!a & Xb)
+ expected_exitcode=1
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ltlfilt
+ cmd=/home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ shift
+ test -n /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ set /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -f F(!a & Xb)
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -f F(!a & Xb)
+ exitcode=1
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 1 = 1
+ run 0 ltlfilt --remove-x -f F(!a & Xb)
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ltlfilt
+ cmd=/home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ shift
+ test -n /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ set /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt --remove-x -f F(!a & Xb)
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt --remove-x -f F(!a & Xb)
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ grep -v X out
F(!a & ((a & (a U (!a & b)) & ((!b U !a) | (b U !a))) | (!a & (!a U (a & b)) & ((!b U a) | (b U a))) | (b & (b U (b & !b)) & ((!a U !b) | (a U !b))) | (!b & (!b U b) & ((!a U b) | (a U b))) | (b & (G!a | Ga) & (G!b | Gb))))
+ run 0 ltlfilt -q --stutter-invariant -F out
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ltlfilt
+ cmd=/home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ shift
+ test -n /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ set /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -F out
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt -q --stutter-invariant -F out
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ echo F(a & ((a & (a U (!a & b)) & ((!b U !a) | (b U !a))) | (!a & (!a U (a & !a & b)) & ((!b U a) | (b U a))) | (b & (b U (!a & b & !b)) & ((!a U !b) | (a U !b))) | (!b & (!b U (!a & b)) & ((!a U b) | (a U b))) | (!a & b & (G!a | Ga) & (G!b | Gb))))
+ run 0 ltlfilt --remove-x -f F(a & X(!a & b))
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ltlfilt
+ cmd=/home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ shift
+ test -n /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt
+ set /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt --remove-x -f F(a & X(!a & b))
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q /home/nissa/Documents/WORKS/cadical-user-propagation/spot/bin/ltlfilt --remove-x -f F(a & X(!a & b))
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ diff expected out
PASS core/remove_x.test (exit status: 0)
