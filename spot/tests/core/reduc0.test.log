+ . ./defs
+ test -f ./defs
+ test -z .
+ test -f ./../core/defs.in
+ echo == Running test reduc0.test
== Running test reduc0.test
+ echo reduc0.test
+ sed -e s,.*[\/],,;s/\.test$//
+ me=reduc0
+ testSubDir=reduc0.dir
+ chmod -R a+rwx reduc0.dir
+ rm -rf reduc0.dir
+ mkdir reduc0.dir
+ cd reduc0.dir
+ srcdir=../.
+ AWK=gawk
+ DOT=dot
+ LBTT=
+ LBTT_TRANSLATE=
+ VALGRIND=valgrind
+ SPIN=
+ LTL2BA=
+ PYTHON=
+ top_srcdir=/home/nissa/Documents/WORKS/cadical-user-propagation/spot
+ unset SPOT_DOTEXTRA
+ unset SPOT_DOTDEFAULT
+ set -x
+ set -e
+ run 0 ../reduc 0 XFa & FXa XFa
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ../reduc
+ cmd=../reduc
+ shift
+ test -n ../reduc
+ set ../reduc 0 XFa & FXa XFa
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q ../reduc 0 XFa & FXa XFa
XFa & FXa ** XFa ** XFa OKREDUC 
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ run 0 ../reduc 0 (Xf W 0) | X(f W 0) XGf
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ../reduc
+ cmd=../reduc
+ shift
+ test -n ../reduc
+ set ../reduc 0 (Xf W 0) | X(f W 0) XGf
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q ../reduc 0 (Xf W 0) | X(f W 0) XGf
(Xf W 0) | X(f W 0) ** XGf ** XGf OKREDUC 
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ run 0 ../reduc 0 {a[*];{b && !b}}
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ../reduc
+ cmd=../reduc
+ shift
+ test -n ../reduc
+ set ../reduc 0 {a[*];{b && !b}}
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q ../reduc 0 {a[*];{b && !b}}
8 8 '{a[*];{b && !b}}' reduce to '{a[*];{b && !b}}'
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ run 0 ../reduc 0 !{a[*];{b && !b}}
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ../reduc
+ cmd=../reduc
+ shift
+ test -n ../reduc
+ set ../reduc 0 !{a[*];{b && !b}}
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q ../reduc 0 !{a[*];{b && !b}}
8 8 '!{a[*];{b && !b}}' reduce to '!{a[*];{b && !b}}'
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ run 0 ../reduc 0 (a | (Xa M a))
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ../reduc
+ cmd=../reduc
+ shift
+ test -n ../reduc
+ set ../reduc 0 (a | (Xa M a))
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q ../reduc 0 (a | (Xa M a))
6 1 'a | (Xa M a)' reduce to 'a' or (w/o rss) to 'a | (a & Xa)'
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ run 0 ../reduc 0 (b xor (Xb U b)) <-> e
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ../reduc
+ cmd=../reduc
+ shift
+ test -n ../reduc
+ set ../reduc 0 (b xor (Xb U b)) <-> e
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q ../reduc 0 (b xor (Xb U b)) <-> e
38 33 '(e & ((b & (X!b R !b)) | (!b & (Xb U b)))) | (!e & ((b & (Xb U b)) | (!b & (X!b R !b))))' reduce to '(e & ((b & (X!b R !b)) | (!b & (Xb U b)))) | (!e & (b | (!b & (X!b R !b))))' or (w/o rss) to '(e & ((b & !b & X!b) | (!b & (b | Xb)))) | (!e & ((!b & X!b) | (b & (b | Xb))))'
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
+ run 0 ../reduc 3 1 U (a | Fb) F(a | b)
+ expected_exitcode=0
+ shift
+ exitcode=0
+ test -n valgrind
+ command -v ../reduc
+ cmd=../reduc
+ shift
+ test -n ../reduc
+ set ../reduc 3 1 U (a | Fb) F(a | b)
+ exec
+ GLIBCXX_FORCE_NEW=1 /home/nissa/Documents/WORKS/cadical-user-propagation/spot/libtool --mode=execute valgrind --tool=memcheck --leak-check=yes --log-fd=6 -q ../reduc 3 1 U (a | Fb) F(a | b)
1 U (a | Fb) ** F(a | b) ** F(a | b) OKREDUC 
+ cat valgrind.err
+ sed 1q valgrind.err
+ test -z 
+ rm -f valgrind.err
+ test 0 = 0
PASS core/reduc0.test (exit status: 0)
